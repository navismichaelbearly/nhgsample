export default Object.freeze({
  thirdPartyUppercase: 'THIRD PARTY',
  thirdPartyErrorText:
    'Unable to connect to third party contact. Please use another recipient type.',
  errorMessage: 'Something has gone wrong!',
  genericErrorText:
    'We have encountered an issue whilst trying to retrieve this information, please try again later.',
  genericContactITErrorText:
    'We have encountered an issue whilst trying to retrieve this information. If the issue persists, contact your IT team',
  myTasksNoDataMsg: 'There are no tasks currently assigned to you.',
  tasksNoDataMsg: 'There are no tasks to be shown within the selected patches.',
  selectedUserTasksNoDataMsg: 'There are no tasks to be shown for the selected users.',
  arrearsNoDataMsg: 'There are no arrears or tasks to be shown within the selected patches.',
  activityHistory: {
    attachments: 'Attachments',
    heading: 'Activity history ({count})',
    itemHeading: 'Activity history item',
    labels: {
      back: 'Back',
      createdOn: 'Created on',
      date: 'Date:',
      description: 'Description',
      detail: 'Details:',
      interactionTime: 'Date/time of interaction',
      interactionWith: 'Interaction with',
      modified: 'Last modified',
      name: 'Contact Name:',
      next: 'next history item',
      previous: 'previous history item',
      raisedBy: 'Raised by',
    },
    values: {
      inbound: 'Inbound',
      interactionWith: '{name} ({type})',
      outbound: 'Outbound',
    },
  },
  legalReferral: {
    approval: 'Approval on',
    by: 'By',
    createdAt: 'Referral date',
    createdBy: 'Raised by contact',
    formName: 'Legal case referral type',
    lastModifiedOn: 'Last modified on',
    link: 'Link to Referral',
    owner: 'Owner',
    progressStatus: 'Legal Referral Pack status',
    rejected: 'Rejected on',
    status: 'Status',
  },
  currencySymbol: 'Â£',
  interaction: {
    addInteraction: 'Add interaction',
    errorText: {
      activityKind: 'Please select the activity kind',
      description: 'Please enter a description',
      formError: 'There was a problem, please try again.',
      interactingParty: 'Please select the party you interacted with',
      interactionDate: 'Please select the interaction date',
      interactionTime: 'Please select the interaction time',
      interactionDateOrTime: 'Please select an interaction date and time',
      interactionType: 'Please select the type of interaction',
    },
    labels: {
      attachMedia: 'Attach documents',
      backButton: 'Back',
      description: 'Description',
      interactingParty: 'Party the interaction was with',
      interactionDateAndTime: 'Date / time of interaction',
      interactionType: 'Type of interaction',
      submitAndCreateTaskButton: 'Save interaction and add Task',
      submitButton: 'Save interaction',
    },
    notification: {
      createInteractionTitle: 'Interaction added',
      line1: '{type}, {kind}, {date},  {time}',
    },
  },
  media: {
    heading: 'Attach documents',
    typeHeadings: {
      note: 'Add note',
      interaction: 'Add interaction',
      'payment-plan': 'Create payment plan',
    },
    paragraphTypes: {
      note: 'note',
      interaction: 'interaction',
      'payment-plan': 'payment plan',
    },
    errorText: 'An error has occured when uploading the files below',
    labelText: 'Attach documents',
    removeButtonLabel: 'Remove this local file',
    retryButtonLabel: 'Retry',
    submitLabel: 'Continue',
    text: 'Choose file to upload',
    uploadSuccessMessage: 'Upload successful',
    paragraphAttach: 'Select a file and press continue to attach a document to this {type}.',
    paragraphContinue: 'Otherwise press continue to proceed without adding documents.',
  },
  referral: {
    heading: 'Referral',
    teamName: 'Referred Team',
    detail: 'Detail',
    raisedBy: 'Raised By',
    createdOn: 'Created',
  },
  nosp: {
    labels: {
      title: 'Please confirm you wish to serve NOSP early',
      cancel: 'Cancel',
      submit: 'Serve NOSP early',
    },
    errorMessage: 'an error has occured',
  },
  pause: {
    heading: 'Pause',
    status: 'Current state',
    reason: 'Reason',
    endDate: 'End Date',
    furtherDetail: 'Details',
    isExtended: '(extension)',
    originalStartDate: 'Start Date',
    lastModifiedOn: 'Last modified on',
    lastModifiedBy: 'By',
    createdOn: 'Created on',
    createdBy: 'By',
    isApproved: 'Approved',
    isRejected: 'Rejected',
    approvedOn: 'On',
    approvedBy: 'By',
    ownerName: 'Assigned to',
    cancelReason: 'Cancel Reason',
    notified: 'Notification sent to',
    notifiedOn: 'On',
  },
  addNote: {
    addInteraction: 'add interaction',
    addNote: 'Add note',
    attachFile: 'Attach documents',
    back: 'Back',
    note: 'Note',
    noteError: 'Please add a note',
    formError: 'There was a problem adding this note, please try again.',
    warning:
      "Don't use this to record communications with customers such as letters, calls or emails. Use",
    notification: {
      title: 'Note added',
      line1: 'Full details can be seen on the Arrears Details page',
    },
  },
  addTask: {
    addTask: 'Add Task',
    titleLabel: 'Task title',
    titleErrorText: 'Title is required',
    descriptionLabel: 'Task description',
    descriptionErrorText: 'Description is required',
    dateLabel: 'Date by which task is due',
    dateErrorText: 'Date is required',
    formError: 'There was a problem adding this task, please try again.',
    serverError: 'A problem occured when submitted the form, please try again.',
    assignToMeLabel: 'Assign task to me',
    addTaskButton: 'Add Task',
    backButton: 'Back',
    submitButton: 'Add Task',
    userPickerLabel: 'Select a user',
    userPickerPlaceholder: 'Enter a housing officer name',
    notification: {
      title: 'Task added',
    },
  },
  approvelegalCaseReferral: {
    errorText: {
      approveReferralError: 'Please either approve or reject this legal referral',
      formError: 'There was a problem approving this legal referral, please try again.',
      reasonForDenyingError: 'Please give a reason for not approving this legal referral',
    },
    labels: {
      approveReferral: 'Approve legal referral?',
      approveReferralSubtitle:
        'You must review the legal referral pack, linked above, before you can answer this question',
      backButton: 'Back',
      no: 'No',
      reasonForDenying: 'Reason for not approving referral',
      referralFormLink: 'Legal referral form',
      referralPackLink: 'Legal referral pack',
      submitButton: 'Submit',
      yes: 'Yes',
    },
    notification: {
      approvedTitle: 'Legal case referral approved',
      cancelledTitle: 'Legal case referral cancelled',
    },
    heading: 'Review legal case referral',
    requiresNonCreatorApproval:
      'Legal Referrals cannot be approved by the creator. Please ensure the approval task is assigned to another manager',
    subtitle: 'Legal case awaiting manager approval',
  },
  approvePause: {
    errorText: {
      approvePauseError: 'Please either approve or reject this pause request',
      formError:
        'There has been an error processing this request. If the issue persists, contact your IT team',
      reasonForDenyingError: 'Please give a reason for not approving this pause request',
    },
    labels: {
      approvePause: 'Approve pause?',
      backButton: 'Back',
      furtherDetail: 'Further detail',
      no: 'No',
      reasonForDenying: 'Reason for not approving pause',
      reasonForPausing: 'Reason for pausing case',
      requestedEndDate: 'Requested end date of pause',
      submitButton: 'Submit',
      yes: 'Yes',
    },
    notification: {
      approvedTitle: 'Arrears case pause approved',
      cancelledTitle: 'Arrears case pause cancelled',
      line1: 'Paused until {date}',
      line2: 'Full details in Arrears item history below',
    },
    pauseRequest: 'Pause request',
    pauseRequestDetails: 'Pause request details',
  },
  arrearsDashboard: {
    customerHeading: 'My arrears',
    housingOfficerHeading: 'Arrears',
    tasks: 'Tasks - Patches',
    myTasks: 'Tasks - My Tasks',
    selectedUserTasks: 'Tasks - Selected Users',
    priority: 'Priority',
    currentBalance: 'Current Balance',
    daysInArrears: 'Days in Arrears',
    sortBy: 'Sort By',
    stage: 'Stage',
    show: 'Show',
    selectAStage: 'Select a Stage',
    filters: {
      allStages: 'All Stages',
      arrears: 'Arrears - {status} ({count})',
      // v Indented string for dropdown presenttion
      arrearsByStage: '\u00A0\u00A0\u00A0\u00A0{stage} ({count})',
    },
  },
  archivedTasks: {
    breadcrumbs: 'Closed and cancelled tasks',
    heading: 'Closed and cancelled tasks ({count})',
    reasons: 'Reasons for closing',
    completed: 'Completed',
    cancelled: 'Cancelled',
  },
  arrearsDetails: {
    documents: {
      heading: 'Documents ({count})',
      filename: 'File name',
      date: 'Date added',
      user: 'Created by',
      link: 'View document',
    },
    tasks: {
      heading: 'Open Tasks ({count})',
      labels: {
        dueDate: 'Due by',
        doDate: 'Do on',
        owner: 'Owner',
        created: 'Created',
        viewOtherTasks: 'View closed and cancelled tasks',
        taskCompleteButton: 'Complete',
        taskReassignButton: 'Reassign',
        taskYesButton: 'Yes',
        taskNoButton: 'No',
        taskCancelButton: 'Cancel',
        overdue: '(OVERDUE)',
        reason: 'Reason for {reason}',
        reasons: {
          completion: 'completing',
          cancellation: 'cancelling',
          reassignment: 'reassignment',
        },
      },
    },
    frequencies: {
      W: 'Weekly',
      A: 'Anually',
      Q: 'Quarterly',
      M: 'Monthly',
    },
    arrearsDetailsLabels: {
      lengthOfArrears: 'Length of arrears',
      lengthOfArrearsValue: '{days} days (case started on {date})',
      none: 'None',
      patchOwner: 'Patch owner',
      pauses: {
        active: '(active)',
        isExtended: '(extended)',
        draftLabel: 'Draft pauses',
        draftPausePeriod: 'Requested from {from} to {to}',
        label: 'Pauses',
        pausePeriod: 'Paused from {from} to {to}',
        pendingApproval: '(pending approval)',
      },
      rentDetails: {
        paymentReferenceNumber: 'Payment reference number',
        paymentFrequency: 'Debit frequency',
        collectionRate: {
          label: 'Collection rate {value}',
          value5w: '(5W)',
          value4m: '(4M)',
          value: '{value}%',
        },
        grossRent: {
          label: 'Gross rent',
        },
        serviceCharge: {
          label: 'Service charge',
        },
        parkingCharge: 'Parking charge',
        debitFrequency: 'Debit frequency',
        directDebit: 'direct debit',
        recurringCardPayment: 'recurring card payment',
        lastPaymentMethod: 'Last payment method',
        monthly: 'MONTHLY',
        arrearsBalance: 'Current balance',
        universalCredit: 'Universal credit',
      },
      paymentPlan: {
        endDate: 'End date:',
        frequency: 'Frequency:',
        instalmentAmount: 'Instalment amount:',
        installment: 'Instalment:',
        label: 'Payment plan',
        period: 'Period:',
        startDate: 'Start date:',
        type: 'Type:',
      },
      welfareReform: {
        bedroomTax: 'Bedroom tax:',
        benefitCap: 'Benefit cap:',
        claimStartDate: 'Claim start date:',
        label: 'Welfare reform',
        paymentDay: 'Payment day:',
        apaStatus: 'APA status:',
        ucArrearsPaymentStatus: 'UC arrears payment status:',
        universalCredit: 'Universal credit:',
      },
      referralStatus: {
        label: 'Latest referral',
        value: '{team}, {date}',
      },
      linkedCases: 'Linked cases',
      status: 'Arrears status',
      workwiseReference: 'Workwise reference',
    },
    heading: 'Arrears details',
    informationHeading: 'Arrears information',
    phasesHeading: 'Arrears progress',
    legalActions: {
      expiringSoon: ' (EXPIRING SOON)',
      expiryDate: '{date}{alert}',
      heading: 'Legal actions',
      headingExpiring: 'Legal action is about to expire',
      labels: {
        expires: 'Expires:',
        createdOn: 'Created on:',
        owner: 'Owner:',
        status: 'Status:',
      },
    },
    linkedItemsButton: 'Items linked to this arrears item',
  },
  arrearsSummaryCards: {
    address: 'Address',
    currentBalance: 'Current balance',
    heading: 'Arrears',
    notificationDate: 'Notification date',
    openTasks: 'Open tasks',
    tenantName: 'Tenant name',
  },
  taskSummaryCards: {
    heading: 'Task',
    dueDate: 'Due by',
    doDate: 'Do on',
    taskOwner: 'Task Owner',
    title: 'Title',
    customerName: 'Customer Name',
    address: 'Address',
    status: 'Status',
    overdue: 'overdue!',
  },
  taskActionModal: {
    errorText: {
      assignee: 'Please select an assignee',
      formError:
        'There has been an error processing this request. If the issue persists, contact your IT team',
      reason: 'Please enter a reason',
    },
    labels: {
      cancelButton: 'Cancel',
      cancelTaskAction: "Don't Cancel",
      reason: 'Reason',
      userPickerPlaceholder: 'Enter name of housing officer',
      userPickerLabel: 'Reassign to',
    },
    notification: {
      newOwner: 'New owner: {ownerName}',
      taskReassigned: 'Task reassigned',
      taskComplete: 'Task complete',
      taskCancel: 'Task cancelled',
    },
    taskComplete: 'Task complete',
    taskCancel: 'Cancel task',
    taskReassign: 'Reassign task',
  },
  correspondence: {
    errorText: {
      addressCity: 'Please enter city',
      addressLine1: 'Please enter address line 1',
      addressLine2: 'Please enter address line 2',
      addressLine3: 'Please enter address line 3',
      addressPostcode: 'Please enter post code',
      emailInvalid: 'Email not valid',
      emailMissing: 'Please enter email',
      fatalError: 'Generation failed due to DCRM error. Please contact IT Service Desk',
      retriableError:
        'Correspondence merge failed. Please retry. If the problem persists please contact IT Service Desk',
      mergeFieldMissingData: 'Please enter data for {field}',
      mergeFieldMissingDataInvalidData: 'Validation failed for {field}',
      mobileInvalid: 'Phone not valid',
      mobileMissing: 'Please enter mobile phone',
      printMethodMissing: 'Please enter a print method',
      noTemplateFound: 'No template found, please contact your IT help desk',
      recipient: 'Please select a recipient',
      sendingMethod: 'Please select a sendingMethod',
      template: 'Please select a template',
    },
    attachments: {
      labelText: 'Attach documents',
      removeButtonLabel: 'Remove this local file',
      retryButtonLabel: 'Retry',
      text: 'Choose file to upload',
      uploadSuccessMessage: 'Upload successful',
      mandatoryAttachment: 'Mandatory attachment',
      mandatoryAttachmentLabel: 'Attach case files',
      mandatoryAttachmentParagraph:
        'Manage the case files that will be attached to your correspondence',
      removeCaseFile: 'Remove this attachment',
      attachCaseFile: 'Add this attachment',
      genericErrorMessage:
        'We have encountered an issue whilst trying to retrieve this information, please try again later.',
    },
    labels: {
      address: 'Address',
      addressCity: 'City',
      addressLine1: 'Line 1',
      addressLine2: 'Line 2',
      addressLine3: 'Line 3',
      addressPostcode: 'Post code',
      backButton: 'back',
      closeTemplate: 'Close',
      discard: 'Discard',
      cancel: 'Cancel',
      emailAddress: 'Email Address',
      generateDraft: 'Generate Draft Correspondence',
      generatedCorrespondence: 'Generated Correspondence',
      mobilePhone: 'Mobile phone',
      recipient: 'Correspondence recipient',
      retryGenerateDraft: 'Retry',
      previewTemplate: 'Preview {templateName}',
      letterPrintingMethods: 'Letter printing methods',
      nextButton: 'next',
      selectPrintingOption: 'Select letter print option',
      sendingMethod: 'How do you want to contact 3rd party?',
      submitButton: 'submit',
      template: 'Select correspondence template',
      viewPreviewsBeforeProceeding:
        'You need to view each of the following correspondence previews before proceeding.',
      viewPreview: 'View preview',
      viewTemplate: 'Preview {name}',
      alreadyPreviewed: 'Already previewed',
      manualPrint: 'Requires manual print by print preview',
    },
    notification: {
      success: 'Correspondence sent',
      failure: 'Correspondence failed to send',
      cancel: 'Correspondence not sent',
      discard: 'Correspondence not sent',
    },
    sendCorrespondence: 'Send correspondence',
    customiseCorrespondence: 'Customise correspondence',
  },
  dashboard: 'Dashboard',
  legalCaseReferral: {
    create: '{type}',
    review: 'Review {type}',
    buttonLabels: {
      cancel: 'Cancel',
      previous: 'Back',
      next: 'Next',
      submit: 'Next',
      continue: 'Next',
    },
    formError: 'There was a problem submitting the form, please try again.',
    legalCaseReferral: 'Legal case referral',
    reviewReferral: {
      generatingItem: 'Generating {item}... This could take several minutes',
      generationFailed: 'Document generation failed. please retry',
      reviewLegalCase: 'Review legal case',
      reviewText:
        'This process could take several minutes. Closing this page and returning later will not lose your progress.',
      legalReferralForm: 'Legal referral form {type}',
      legalReferralFormText:
        'This contains the completed request for legal action form and a list of all the attachments that will comprise the legal referral pack.',
      legalReferralPack: 'Legal referral pack {type}',
      legalReferralPackConfirm: 'I have reviewed the legal referral pack',
      legalReferralPackConfirmMessage:
        'You must review the legal referral pack, linked above, to proceed',
      linkToSharepoint: '(link to SharePoint folder)',
      pdf: '(PDF)',
      submit: 'Submit',
      submitForReview: 'Submit to manager for review',
      cancel: 'Cancel',
      notification: {
        cancelledText: 'Legal referral cancelled',
        cancelledLine1:
          "Any fields you've completed before cancelling will be saved and populated into the form if you start another legal case referral",
        submittedText: 'Legal case referral sent to manager for approval',
        submittedNonApprovalText: 'Section 21 request made',
      },
    },
  },
  notes: {
    heading: 'Notes ({count})',
    labels: {
      date: 'Date:',
      filename: 'Filename:',
      fileUploadStatus: 'File upload status:',
      name: 'Contact Name:',
    },
  },
  patchStatistics: {
    errorText: {
      noPatch: 'Patch stats not available when no patch added',
      multiplePatchesNotAllowed: 'Patch stats not available when multiple patches selected',
    },
    heading: 'My patch stats',
    labels: {
      accountsInArrears: 'Across {accounts} active Arrears cases',
      accountsWithHBUCSuspended: '{accounts} accounts with HB/UC suspended',
      appointmentsToBeMade: '{appointments} appointments to be made',
      NOSPs: '{NOSPs} NOSPs to be served',
      liveReferralsToWBTeam: '{referrals} live referrals to W&B team',
      openTenancyReferrals: '{referrals} open tenancy support referrals',
      outstandingLegalReferrals: '{legalReferrals} legal referrals outstanding',
      percentageOfRentCharged:
        '{percentage}% of accounts on your patch have an active Arrears case',
      totalArrears: 'Cash value of arrears',
    },
  },
  payment: {
    labels: {
      CardPayment: 'One off payment',
      createdBy: 'Raised by',
      createdOn: 'Created on',
      DirectDebit: 'Direct Debit',
      endDate: 'Scheduled End Date',
      firstPayment: 'Date of First Payment',
      frequency: {
        Weekly: 'Weekly',
        Fortnightly: 'Fortnightly',
        Fourweekly: 'Every 4 weeks',
        Monthly: 'Monthly',
        LastFridayOfTheMonth: 'Last Friday of the month',
        Quarterly: 'Quarterly',
        HalfYearly: 'Half yearly',
        Yearly: 'Yearly',
      },
      heading: 'Payment',
      instalmentAmount: 'Instalment Amount',
      paymentAmount: 'Payment amount',
      paymentFrequency: 'Payment frequency',
      paymentMethod: 'Payment Method',
      paymentStatus: 'Payment Status',
      RecurringCard: 'Recurring',
    },
  },
  paymentPlan: {
    errorText: {
      closePlan:
        "The payment plan can't be cancelled at the moment. Please try again and report the issue to IT Service Desk if the problem persists.",
      closePlanSelectRequired: 'Please select a reason',
      formError:
        "The payment plan can't be created at the moment. Please ensure that there is not an existing arrangement on Northgate. If the problem persists please report the issue to IT Service Desk.",
      installmentAmount: 'Please enter an instalment amount',
      installmentAmountNotNumber: 'Please provide a number',
      installmentFrequency: 'Please select an instalment frequency',
      installmentPeriod: 'Please select an instalment period',
      note: 'Please enter some notes',
      planType: 'Please select a plan type',
      startDate: 'Please enter a start date',
    },
    installmentArrangementFormat: '{amount} Every {period} {schedule}(s)',
    labels: {
      attachFile: 'Attach documents',
      heading: 'Payment Plan',
      backButton: 'Back',
      closeButton: 'Close Payment Plan',
      closePlanDisclaimer:
        'Closing this payment plan will not automatically terminate the financial arrangement. Separate action required',
      closePlanDescription: 'Are you sure you want to close this payment plan?',
      closePlanNo: 'No',
      closePlanYes: 'Yes, Close the plan',
      endDate: 'End date',
      installmentAmount: 'Instalment amount',
      installmentFrequency: 'Instalment frequency',
      installment: 'Instalment',
      every: 'Every',
      installmentPeriod: 'Instalment period',
      note: 'Note',
      paymentPlanType: 'Payment plan type',
      pleaseSelectAReason: 'Please select a reason...',
      raisedBy: 'Raised by',
      reasonSelect: 'Select reason',
      reasonText: 'Enter a description',
      startDate: 'Start date',
      submitButton: 'Create Payment Plan',
      tenantDefaultOption: 'Tenant Default',
      newArrangementOption: 'New Arrangement',
      lastModifiedAt: 'Last modified',
      lastModifiedBy: 'By',
      status: 'Status',
      description: 'Note',
      contactName: 'Contact Name',
      detail: 'Payment Plan type',
      endedBy: 'Ended By',
    },
    notification: {
      closePaymentPlanTitle: 'Personal payment plan closed',
      createPaymentPlanTitle: 'Personal payment plan set up',
      closePaymentPlanLine2: 'Customer notified by email, SMS and my account notification',
      createPaymentPlanLine1: '{amount} Every {period} {schedule}(s) from {startDate}',
      createPaymentPlanLine2: 'Customer notified',
    },
    createPaymentPlan: 'New payment plan',
    closePaymentPlan: 'Close payment plan',
    viewPaymentPlan: 'View payment plan',
  },
  propertyInformation: {
    editDetailsHeading: 'Update tenant details',
    editDetailsSubheading:
      'These are the details we will use to contact the tenant, so please make sure theyâre correct.',
    errorMessages: {
      emailAddressError: 'Please enter a valid email address',
      phoneNumberError: 'Please enter a valid phone number',
      submitError: 'There was a problem updating your details, please try again.',
    },
    heading: 'Property and customer information',
    labels: {
      address: 'Address',
      cancelButtonText: 'Cancel',
      closeButtonText: 'Close',
      confirmationText: 'Contact details updated',
      coTenant: '(Co tenant)',
      editButton: 'Edit contact details',
      emailAddress: 'Email:',
      emailAddressLabel: 'Email address',
      errorText: 'There was a problem updating your details, please try again.',
      fullNameLabel: 'Name',
      mainTenant: '(Main tenant)',
      notAvailable: 'N/A',
      phoneNumberLabel: 'Contact number',
      telephoneNumber: 'Phone:',
      tenancyType: 'Tenancy Type',
      updateButtonText: 'Update contact details',
    },
    vulnerabilityFlag: 'Vulnerable',
  },
  patchSelect: {
    you: 'You',
  },
  pauseArrearsCase: {
    cancelPauseRequest: '{username} cancelled pause request',
    declinePauseRequest: '{username} declined pause request',
    labels: {
      awaitingApproval: 'This pause is awaiting manager approval.',
      backButton: 'Back',
      cancelButton: 'Cancel arrears case pause',
      endDate: 'End date of pause',
      furtherDetail: 'Further details',
      furtherDetailAdd: 'Add to further details',
      managerPause: 'Your manager can pause until {date}',
      myPause: 'You can pause until {date}',
      notifyManager: 'Notify manager',
      notifyManagerExtended: 'Are you sure you want the relevant manager to approve this pause?',
      pleaseNote:
        'Please note, you can only review the latest pause action against an arrears case. You will not be able to access an active pause if there is a draft pause awaiting approval.',
      reasonForPausing: 'Reason for pausing case',
      submitButton: 'Submit',
      updateButton: 'Update case pause',
    },
    errorText: {
      endDateError: 'Please select a pause end date',
      extendedEndDateError: 'Please select date within the allowed period',
      formError: 'There was a problem creating this pause, please try again.',
      furtherDetailError: 'Please enter some details',
      notifyManagerError: 'You must request approval for this pause from the relevant manager',
      outsideManagerPause:
        'The relevant manager can only pause this case until {date}. Please enter an end-pause date within this period.',
      outsideSeniorManagerPause: 'You can only pause this arrears case until {date}',
      outsideMyPause:
        'You can only pause this arrears case until {date}. If you need to pause it for longer, confirm you want the relevant manager to approve this pause, then submit the form.',
      reasonForPausingError: 'Please select a reason',
    },
    notification: {
      cancelTitle: 'Arrears case pause cancelled',
      createTitle: 'Arrears case paused',
      createTitleApprove: 'Manager approval needed',
      updateTitle: 'Arrears case pause updated',
      updateTitleApprove: 'Pause update: Manager approval needed',
      requiresApproval:
        'Your requested pause needs to be approved by your manager, who has been notified',
      pauseDetails: 'Reason for pause: {reason}. Paused until {date}',
      fullDetails: 'Full details in Arrears item history below',
    },
    pauseArrearsCase: 'Pause arrears case',
    reviewPauseRequest: 'Review pause request',
    updatePauseRequest: 'Update/cancel pause',
  },
  referArrearsCase: {
    back: 'back',
    detailsError: 'Please enter some details',
    fullDetailsInHistory: 'Full details in Arrears item history below',
    heading1: 'Refer arrears case',
    heading2: 'Tenancy sustainment referral',
    referDetailsLabel: 'Details',
    referTo: 'Refer to',
    referredFor: 'Referred for',
    referTeamError: 'Please select an option',
    submit: 'Refer arrears case',
    successMessage: 'Arrears case referred',
  },
  serveNosp: {
    serveNospEarly: 'Serve NOSP early',
  },
  takePayment: {
    takePayment: 'New payment',
  },
  transactionHistory: {
    effectiveDate: 'Date',
    description: 'Description',
    heading: 'Transaction history (12 months)',
    paidIn: 'Paid in',
    amount: 'Amount',
    charged: 'Charged',
    balance: 'Balance',
  },
  welfareReformDetailsEdit: {
    paymentDayError: 'Payment day should be between 1 and 31',
    labels: {
      backButton: 'Back',
      saveButton: 'Save',
    },
    lastUpdate: 'Last updated',
    welfareReformDetails: 'Welfare reform details',
  },
});
